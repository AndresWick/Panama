create or replace PROCEDURE PR_REGISTRAR_RESERVA
(
 pf_eta IN RESERVA.f_eta%TYPE,
 pn_puerto_salida IN RESERVA.n_puerto_salida%TYPE,
 pn_puerto_llegada IN RESERVA.n_puerto_llegada%TYPE,
 --lf_salida IN RESERVA.f_salida%TYPE,
 --lf_llegada IN RESERVA.f_llegada%TYPE,
 pk_num_serie IN RESERVA.k_num_serie%TYPE,
 pv_cargaTransportada IN RESERVA.v_cargatransportada%TYPE,
 pn_sentido IN reserva.n_sentido%TYPE
)
AS
 lv_beam buque.v_beam%TYPE;
 lv_loa buque.v_loa%TYPE;
 lv_costo_reserva NUMBER;
 lk_periodo periodo.k_id%TYPE;
 lq_numero_cupos_disponibles NUMBER;
 lk_tipo_buque buque.k_idbuque%type;
 lk_idAgente agente.k_id%type;
BEGIN

-- Verificar el agente que esta haciendo la peticion ---
SELECT lower(user) INTO lk_idAgente FROM canaldepanama.Agente WHERE LOWER(agente.k_id) = LOWER(user);
dbms_output.put_line('Id agente'||lk_idAgente);

---- Calcular que periodo aplica -----
lk_periodo := FU_CALCULAR_PERIODO(pf_eta);

IF lk_periodo = 0 THEN
  RAISE_APPLICATION_ERROR (-20200, 'No hay periodo abiertos para la fecha seleccionada '||TO_CHAR(pf_eta,'yyyy/mm/dd'));
END IF;
 dbms_output.put_line('Periodo que aplica');
 dbms_output.put_line(lk_periodo);

 ----- obtener los datos del buque ----------------
 SELECT B.k_idbuque,B.v_beam,B.v_loa INTO lk_tipo_buque,lv_beam,lv_loa FROM BUQUE B WHERE B.k_num_serie = pk_num_serie;
 dbms_output.put_line('Datos del Buque');
 dbms_output.put_line(lk_tipo_buque||'-'||lv_beam||'-'||lv_loa);

----  Verificar que hay cupos disponibles para la fecha con el periodo calculado y para el sentido seleccionado -----
 lq_numero_cupos_disponibles := FU_CUPOS_DISPONIBLES(pf_eta,pn_sentido,lk_periodo,lk_tipo_buque);
 IF lq_numero_cupos_disponibles = 0 THEN
    RAISE_APPLICATION_ERROR (-20203, 'No hay Cupos Disponibles');
 END IF;
 --- Si solo queda un cupo disponible y el buque pasara por la esclusa PANAMAX hacer subasta ---
 --Tipos Buque que pasan por la esclusa PANAMAX
 --Tipo Buque 1 --> Regular
 --Tipo Buque 2 --> Super
 IF lq_numero_cupos_disponibles = 1 AND (lk_tipo_buque = 1 OR lk_tipo_buque = 2)  THEN
    RAISE_APPLICATION_ERROR (-20204, 'Solo queda un Cupo para Subasta');
 END IF;
 dbms_output.put_line('Cupos disponibles '||lq_numero_cupos_disponibles);

 ----- calcular el costo de la reserva --------------
 lv_costo_reserva := FU_PRECIO_RESERVA(lv_beam,lv_loa);
dbms_output.put_line('Costo Reserva '||lv_costo_reserva);

 --- Hacer el registro de la reserva ---------------
 INSERT INTO RESERVA (k_id, f_eta, n_puerto_salida, n_puerto_llegada,k_num_serie,v_cargaTransportada,v_costo,i_estado,k_idAgente,n_sentido) VALUES
 (reserva_seq.NEXTVAL,pf_eta,pn_puerto_salida,pn_puerto_llegada,pk_num_serie,pv_cargaTransportada,lv_costo_reserva,'Pen',lk_idAgente,pn_sentido);

 ------- Actualizar los cupos disponibles -----------
 UPDATE cronograma c SET c.q_cupos_disp = c.q_cupos_disp-1 WHERE c.k_idper=lk_periodo AND c.k_sentido=pn_sentido AND c.k_idper = lk_periodo AND c.k_tipobuque = lk_tipo_buque;

dbms_output.put_line('Reserva Registrada');

 EXCEPTION
  WHEN no_data_found THEN
    IF lk_idAgente IS NULL THEN
        RAISE_APPLICATION_ERROR (-20201, 'No esta logeado como un Agente');
    ELSE
        RAISE_APPLICATION_ERROR (-20201, 'Datos no encontrados para el buque '||pk_num_serie);
    END IF;

END PR_REGISTRAR_RESERVA;
/